// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// User schema
// Should contain information about the user and their accounts

model User {
  id       String    @id @unique @db.Uuid
  email    String    @unique
  name     String    @db.VarChar(32)
  // accounts array to create one to many relationship between owner and accounts
  accounts Account[]
}

// Account schema
// Should contain information about the account and its transactions

model Account {
  id       String        @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  balance  Float
  // to ensure many to many relationship between two account that made a transaction
  payer    Transaction[] @relation("payer")
  reciever Transaction[] @relation("reciever")
  // owner id to create one to many relationship between owner and accounts
  owner_id String        @db.Uuid
  owner    User          @relation(fields: [owner_id], references: [id])
}

// Platform Schema
// Should contain information about some platforms that the user might've use 

model Platform {
  id          String    @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  link        String
  description String?
  service     Service[]
}

// Service Schema
// Should contain information about the service that the platform provides including the name, a description and it's price

model Service {
  id          String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  description String?
  price       Float
  platform_id String   @db.Uuid()
  platform    Platform @relation(fields: [platform_id], references: [id])
}

// Transaction Schema
// Provides a schema for transactions that are done between two users or a user and a platform

model Transaction {
  // to ensure many to many relationship between account and transaction
  id          String  @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  payment     Float
  payer       Account @relation(name: "payer", fields: [payer_id], references: [id])
  payer_id    String  @db.Uuid
  reciever    Account @relation(name: "reciever", fields: [reciever_id], references: [id])
  reciever_id String  @db.Uuid

}
